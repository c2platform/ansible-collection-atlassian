---
name: Release and deploy to Galaxy
on:  # yamllint disable-line rule:truthy
  workflow_dispatch:

jobs:
  releaseanddeploy:
    runs-on: ubuntu-latest
    # if: github.repository == 'ansible-collection-atlassian'
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get current version
        id: cversion
        run: echo "::set-output name=version::$(grep version galaxy.yml | awk -F'"' '{ print $2 }')"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies  # not used
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ansible
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Copy files and directories to source
        run: |
          mkdir -p build/src
          cp $files build/src
          cp -rf $directories build/src
        env:
          files: "README.md LICENSE galaxy.yml"
          directories: "roles meta"
      - name: Build Ansible Collection
        run: ansible-galaxy collection build build/src --force
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.cversion.outputs.version }}
          release_name: Release ${{ steps.cversion.outputs.version }}
          body: |
            # Ansible Collection: c2platform.core
            ![ReleaseBuildCollection](https://github.com/c2platform/ansible-collection-atlassian/workflows/ReleaseBuildCollection/badge.svg)

            Install with:
            ansible-galaxy collection install -r requirements.yml -f

            The requirements.yml needs to have the following format and content:
            ---
            collections:
                - https://github.com/c2platform/ansible-collection-atlassian/releases/download/v${{ steps.cversion.outputs.version }}/c2platform-atlassian-${{ steps.cversion.outputs.version }}.tar.gz
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: c2platform-atlassian-${{ steps.cversion.outputs.version }}.tar.gz
          asset_name: c2platform-atlassian-${{ steps.cversion.outputs.version }}.tar.gz
          asset_content_type: application/tar+gzip
      - name: Deploy Ansible collection to Galaxy
        run: ansible-galaxy collection publish c2platform-atlassian-${{ steps.cversion.outputs.version }}.tar.gz --api-key ${{ secrets.GALAXY_API_KEY }}
        # run: ansible-galaxy collection publish c2platform-atlassian-${{ steps.cversion.outputs.version }}.tar.gz --server https://galaxy-dev.ansible.com/ --api-key ${{ secrets.GALAXY_API_KEY }}
